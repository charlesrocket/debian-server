---

- name: Clone xdo repository
  git: repo=https://github.com/baskerville/xdo.git dest="{{ ansible_env.HOME }}/.cache/install/xdo" update=yes accept_hostkey=yes
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Install build dependencies
  apt: pkg="{{ item }}" state=latest
  with_items:
    - libasound2-dev
    - libxcb-xtest0-dev
    - libxft-dev
    - libx11-xcb-dev

- name: Install dependencies
  apt: pkg="{{ item }}" state=latest
  with_items:
    - conky-cli
    - fonts-font-awesome
    - ttf-ubuntu-font-family

- name: Make xdo
  command: make
  args:
    chdir: "{{ ansible_env.HOME }}/.cache/install/xdo"
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Make install xdo
  command: make install
  args:
    chdir: "{{ ansible_env.HOME }}/.cache/install/xdo"

- name: Clone sutils repository
  git: repo=https://github.com/baskerville/sutils.git dest="{{ ansible_env.HOME }}/.cache/install/sutils" update=yes accept_hostkey=yes
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Make sutils
  command: make
  args:
    chdir: "{{ ansible_env.HOME }}/.cache/install/sutils"
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Make install sutils
  command: make install
  args:
    chdir: "{{ ansible_env.HOME }}/.cache/install/sutils"

- name: Clone xtitle repository
  git: repo=https://github.com/baskerville/xtitle.git dest="{{ ansible_env.HOME }}/.cache/install/xtitle" update=yes accept_hostkey=yes
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Make xtitle
  command: make
  args:
    chdir: "{{ ansible_env.HOME }}/.cache/install/xtitle"
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Make install xtitle
  command: make install
  args:
    chdir: "{{ ansible_env.HOME }}/.cache/install/xtitle"

- name: Clone lemonbar repository
  git: repo=https://github.com/Benoth/bar.git dest="{{ ansible_env.HOME }}/.cache/install/lemonbar" update=yes accept_hostkey=yes
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Make lemonbar
  command: make
  args:
    chdir: "{{ ansible_env.HOME }}/.cache/install/lemonbar"
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Make install lemonbar
  command: make install
  args:
    chdir: "{{ ansible_env.HOME }}/.cache/install/lemonbar"

- name: Ensure .bash_profile file exists
  file: path="{{ ansible_env.HOME }}/.bash_profile" state=touch
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Configure bash environment
  lineinfile: dest="{{ ansible_env.HOME }}/.bash_profile" regexp=" {{ item.regexp }}=" line="export {{ item.line }}" state=present
  with_items:
    - { regexp: 'PATH',               line: 'PATH="$PATH:$HOME/.config/bspwm/panel"' }
    - { regexp: 'PANEL_FIFO',         line: 'PANEL_FIFO="/tmp/bspwm-top-panel-fifo"' }
    - { regexp: 'PANEL_WM_NAME',      line: 'PANEL_WM_NAME="bspwm-top-panel"' }
    - { regexp: 'PANEL_FONT_TEXT',    line: 'PANEL_FONT_TEXT="Ubuntu:pixelsize=13"' }
    - { regexp: 'PANEL_FONT_SYMBOLS', line: 'PANEL_FONT_SYMBOLS="FontAwesome:pixelsize=11"' }
    - { regexp: 'PANEL_HEIGHT',       line: 'PANEL_HEIGHT="24"' }

- name: Ensure .zshenv file exists
  file: path="{{ ansible_env.HOME }}/.zshenv" state=touch
  become: true
  become_user: "{{ ansible_env.USER }}"

- name: Configure Zsh environment
  lineinfile: dest="{{ ansible_env.HOME }}/.zshenv" regexp=" {{ item.regexp }}=" line="export {{ item.line }}" state=present
  with_items:
    - { regexp: 'PATH',               line: 'PATH="$PATH:$HOME/.config/bspwm/panel"' }
    - { regexp: 'PANEL_FIFO',         line: 'PANEL_FIFO="/tmp/bspwm-top-panel-fifo"' }
    - { regexp: 'PANEL_WM_NAME',      line: 'PANEL_WM_NAME="bspwm-top-panel"' }
    - { regexp: 'PANEL_FONT_TEXT',    line: 'PANEL_FONT_TEXT="Ubuntu:pixelsize=13"' }
    - { regexp: 'PANEL_FONT_SYMBOLS', line: 'PANEL_FONT_SYMBOLS="FontAwesome:pixelsize=11"' }
    - { regexp: 'PANEL_HEIGHT',       line: 'PANEL_HEIGHT="24"' }
